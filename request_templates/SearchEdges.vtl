
#if ("$!ctx.stash.source" != "" && "$!ctx.stash.target" != "")
  $util.error("Choose one of either source or target, but not both")
#elseif ("$!{ctx.stash.source}${!ctx.stash.source}" == "")
  $util.error("You must specify one of source or target")
#end

#set ($sk_opt = "begins_with(sk, :node)")
#set ($lsi_opt = "begins_with(lsi, :node)")
#if ("$!{ctx.stash.filter}" != "" && "$!{ctx.stash.filter_value}" == "")
  $util.error("Cannot have an empty value for 'filter_value' if using 'filter'")
#end

{
  "version": "2017-02-28",
  "operation": "Query",
  #if ("$!ctx.stash.target" != "")
    "index": "lsi0",
    "query": {
      "expression": "pk = :tenant AND $lsi_opt",
      "expressionValues": {
        ":tenant": $util.dynamodb.toDynamoDBJson("$!{ctx.stash.tenant}"),
        ":node": $util.dynamodb.toDynamoDBJson("E~$!{ctx.stash.target}|")
      },
  #else
    "query": {
      "expression": "pk = :tenant AND $sk_opt",
      "expressionValues": {
        ":tenant": $util.dynamodb.toDynamoDBJson("$!{ctx.stash.tenant}"),
        ":node": $util.dynamodb.toDynamoDBJson("E~$!{ctx.stash.source}|")
      }
  #end
  },
  #if ("$!{ctx.stash.filter}" != "")
    "filter": {
      "expression": "#filter = :filter",
      "expressionNames": {"#filter": "$!{ctx.stash.filter}"},
      "expressionValues": {
      	":filter_value": $util.dynamodb.toDynamoDBJson("$!{ctx.stash.filter_value}")
      }
    },
  #end
  #if ("$!{ctx.stash.limit}" != "")
    "limit": $!{ctx.stash.limit},
  #end
  #if ("$!{ctx.stash.nextToken}" != "")
    "nextToken": "$!{ctx.stash.nextToken}"
  #end
}
