#set ($tenant = "$!{ctx.identity.claims.tenant}")
#set ($type = $ctx.info.fieldName.replaceAll("^Put|App$", ""))
#set ($app_sk = "A~$!{ctx.args.app.name}")
#set ($auth_type_list = ["cognito", "x_account"])

#if ("$!{ctx.args.app.auth_type}" == "x_account" && "$!{ctx.args.app.account}" == "")
  $util.error("Apps with auth_type 'x_account' require 'account' argument")
#end
#if ("$!{ctx.args.app.auth_type}" != "" and $auth_type_list.contains("$!{ctx.args.app.auth_type}"))
  $util.error("Valid auth_type's are 'cognito' or 'x_account'")
#end

{
  "version" : "2017-02-28",
  "operation" : "PutItem",
  "key" : {
      "pk": $util.dynamodb.toDynamoDBJson($tenant),
      "sk": $util.dynamodb.toDynamoDBJson($app_sk)
  },
  "attributeValues" : {
	  "tenant": $util.dynamodb.toDynamoDBJson("$tenant"),
    "type": $util.dynamodb.toDynamoDBJson("$type"),
    "name": $util.dynamodb.toDynamoDBJson("$!{ctx.args.app.name}"),
    "description": $util.dynamodb.toDynamoDBJson("$!{ctx.args.app.description}"),
    "metadata": $util.dynamodb.toDynamoDBJson($!{ctx.args.app.metadata}),
    "event_id": $util.dynamodb.toDynamoDBJson($util.autoId()),
    "config": $util.dynamodb.toDynamoDBJson($!{ctx.args.app.config}),
    #if ("$type" == "Edge")
      "auth_type": $util.dynamodb.toDynamoDBJson("$!{ctx.args.auth_type}"),
      #if ("$!{ctx.args.app.auth_type}" == "x_account")
        "account": $util.dynamodb.toDynamoDBJson("$!{ctx.args.account}"),
      #end
    #elseif ("$type" == "Managed")
      "auth_type": $util.dynamodb.toDynamoDBJson("cognito")
    #end
  },
  "condition": {
    "expression": "(attribute_not_exists(sk) AND attribute_not_exists(pk)) OR (auth_type = :auth_type AND #type = :type AND #name = :name AND account = :account AND config = :config)",
    "expressionValues": {
      ":name": $util.dynamodb.toDynamoDBJson("$!{ctx.args.app.name}"),
      ":auth_type": $util.dynamodb.toDynamoDBJson("$!{ctx.args.app.auth_type}"),
      ":type": $util.dynamodb.toDynamoDBJson("$type"),
      ":account": $util.dynamodb.toDynamoDBJson("$!{ctx.args.app.account}"),
      ":config": $util.dynamodb.toDynamoDBJson($!{ctx.args.app.config})
    },
    "expressionNames": {
      "#type": "type",
      "#name": "name"
    }
  }
}
