name: New Build Function

on:
  push:
    branches:
    - master
    - develop
    - 'release/**'
    - 'feature/*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Deps
      run: pip3.8 install lambda-setuptools
    - name: Set env vars
      run: |
        echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ secrets.ARTIFACTS_PIPELINES_ACCESS_KEY  }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.ARTIFACTS_PIPELINES_SECRET_KEY }}" >> $GITHUB_ENV
        echo "ARTIFACTS_BUCKET=${{ secrets.ARTIFACTS_S3 }}" >> $GITHUB_ENV

        if [ "${GITHUB_REF}" = "refs/heads/develop" ]; then
          echo "S3_PREFIX=${{ secrets.HL7_NINJA_VERSION }}-dev" >> $GITHUB_ENV
        elif [ "${GITHUB_REF}" = "refs/heads/master" ]; then
          echo "S3_PREFIX=${{ secrets.HL7_NINJA_VERSION }}" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF}" =~ ^refs/heads/release/([0-9]+\.)+[0-9]$ ]]; then
          echo "S3_PREFIX=${{ secrets.HL7_NINJA_VERSION }}-stage" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF}" =~ ^refs/heads/feature ]]; then
          echo "S3_PREFIX=${{ secrets.HL7_NINJA_VERSION }}-dev" >> $GITHUB_ENV
        else
          echo "REF: ${GITHUB_REF}"
          echo "Not a buildable branch. Exiting"
          exit 1
        fi
        echo "REF: ${GITHUB_REF}"
    - name: Upload
      run: |
        aws s3 cp request_templates s3://$ARTIFACTS_BUCKET/$S3_PREFIX/appsync/request-templates --recursive --content-type text/plain --sse
