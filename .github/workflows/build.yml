name: Build Appsync Resolvers

on:
  push:
    branches:
    - master
    - develop
    - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Deps
      run: pip3.8 install appsync-schema-uploader appsync-resolver-uploader appsync-function-uploader
    - name: Set env vars
      run: |
        echo "::set-env name=AWS_DEFAULT_REGION::us-east-1"
        if [ "${GITHUB_REF}" = "refs/heads/develop" ]; then
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_DEV }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}"
          echo "::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_DEV }}"
        elif [ "${GITHUB_REF}" = "refs/heads/master" ]; then
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_PROD }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}"
          echo "::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_DEV }}"
        elif [[ "${GITHUB_REF}" =~ ^refs/heads/release/([0-9]+\.)+[0-9]$ ]]; then
          echo "::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}"
          echo "::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}"
          echo "::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_STAGE }}"
        else
          echo "REF: ${GITHUB_REF}"
          echo "Not a buildable branch. Exiting"
          exit 1
        fi
        echo "REF: ${GITHUB_REF}"
    - name: Upload schema
      run: |
        python3.8 -m appsync_schema_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --schema schema.graphql
    - name: Upload resolvers
      run: |
        SINGLE_RESPONSE="python3.8 -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name dynamodb --response-mapping-template response_templates/single-result.vtl --request-mapping-template "
        DEFAULT="python3.8 -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name dynamodb --response-mapping-template response_templates/default.vtl --request-mapping-template "
        LAMBDA_RESOLVER="python3.8 -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name "
        SUBSCRIPTION="python3.8 -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name none "
        PIPELINE="python3.8 -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY}  --api-id ${API_ID} "
        FUNCTION="python3.8 -m appsync_function_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name dynamodb --name "

        # Query functions
        $FUNCTION SearchNodes --description "Searches Nodes" --request-mapping-template request_templates/SearchNodes.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION SearchEdges --description "Searches Edges" --request-mapping-template request_templates/SearchEdges.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION SearchApps --description "Searches Apps" --request-mapping-template request_templates/SearchApps.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION GetUser --description "Gets a user" --request-mapping-template request_templates/GetUser.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION GetUsersForTenant --description "Gets a list of users" --request-mapping-template request_templates/GetUsersForTenant.vtl --response-mapping-template response_templates/pass_result.vtl


        # Mutation functions
        $FUNCTION PutNode --description "Creates/updates Nodes" --request-mapping-template request_templates/PutNode.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION PutTenant --description "Creates a tenant" --request-mapping-template request_templates/PutTenant.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION PutApp --description "Creates an app" --request-mapping-template request_templates/PutApp.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION GetSourceEdges --description "Test if any nodes are attached to an app" --request-mapping-template request_templates/GetSourceEdges.vtl --response-mapping-template response_templates/error_on_result.vtl
        $FUNCTION GetTargetEdges --description "Test if any nodes are attached to an app" --request-mapping-template request_templates/GetTargetEdges.vtl --response-mapping-template response_templates/error_on_result.vtl
        $FUNCTION DeleteNode --description "Delete a Node" --request-mapping-template request_templates/DeleteNode.vtl --response-mapping-template response_templates/default.vtl
        $FUNCTION GetAppNodes --description "Test if any nodes are attached to an app" --request-mapping-template request_templates/GetAppNodes.vtl --response-mapping-template response_templates/error_on_result.vtl
        $FUNCTION DeleteApp --description "Delete an app" --request-mapping-template request_templates/DeleteApp.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION AddUserToTenant --description "Add a user to a tenant" --request-mapping-template request_templates/AddUserToTenant.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION GetApp --description "GetItem on an app" --request-mapping-template request_templates/GetApp.vtl --response-mapping-template response_templates/pass_result.vtl
        $FUNCTION ResetPassword --description "Reset an app password" --request-mapping-template request_templates/ResetAppPassword.vtl --response-mapping-template response_templates/pass_result.vtl


        # Queries
        $LAMBDA_RESOLVER kms_key_datasource --type-name Query --field-name ListKeys
        $DEFAULT request_templates/GetUsersForTenant.vtl --type-name Query --field-name GetUsersForTenant
        $PIPELINE --type-name Query --field-name GetUser --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "GetUser,dynamodb"
        $PIPELINE --type-name Query --field-name GetUsersForTenant --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "GetUsersForTenant,dynamodb"
        $PIPELINE --type-name Query --field-name SearchApps --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "SearchApps,dynamodb"
        $PIPELINE --type-name Query --field-name SearchEdges --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "SearchEdges,dynamodb"
        $PIPELINE --type-name Query --field-name SearchNodes --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "SearchNodes,dynamodb"
        $LAMBDA_RESOLVER validate_function --type-name Query --field-name ValidateFunction --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/ValidateFunction.vtl


        # Mutations
        $LAMBDA_RESOLVER kms_key_datasource --type Mutation --field-name PutKmsKey
        $LAMBDA_RESOLVER edge_datasource --type Mutation --field-name PutEdge
        $PIPELINE --type-name Mutation --field-name PutHl7MLLPInboundNode --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutNode,dynamodb"
        $PIPELINE --type-name Mutation --field-name PutHl7MLLPOutboundNode --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutNode,dynamodb"
        $PIPELINE --type-name Mutation --field-name PutExternalNode --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutNode,dynamodb"
        $PIPELINE --type-name Mutation --field-name PutTenant --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutTenant,dynamodb"
        $PIPELINE --type-name Mutation --field-name DeleteNode --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "GetSourceEdges,dynamodb;GetTargetEdges,dynamodb;DeleteNode,dynamodb"
        $PIPELINE --type-name Mutation --field-name DeleteApp --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "GetAppNodes,dynamodb;DeleteApp,dynamodb"
        $PIPELINE --type-name Mutation --field-name PutExternalApp --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutApp,dynamodb"
        $PIPELINE --type-name Mutation --field-name PutManagedApp --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "PutApp,dynamodb"
        $PIPELINE --type-name Mutation --field-name AddUserToTenant --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "AddUserToTenant,dynamodb"
        $PIPELINE --type-name Mutation --field-name ResetAppPassword --response-mapping-template response_templates/default.vtl --request-mapping-template request_templates/validate_user.vtl --pipeline-config "GetApp,dynamodb;ResetPassword,dynamodb"
        $DEFAULT request_templates/StreamNotifications.vtl --type Mutation --field-name StreamNotifications
        $DEFAULT request_templates/DeleteEdge.vtl --type Mutation --field-name DeleteEdge

        # Subtypes
        $DEFAULT request_templates/X-tenant.vtl --type KMSKey --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type Hl7MLLPOutboundNode --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type Hl7MLLPInboundNode --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type ExternalNode --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type Edge --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type ManagedApp --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type ExternalApp --field-name tenant
        $DEFAULT request_templates/X-tenant.vtl --type User --field-name tenant
        $SINGLE_RESPONSE request_templates/Edge-source.vtl --type Edge --field-name source
        $SINGLE_RESPONSE request_templates/Edge-target.vtl --type Edge --field-name target


        # Nodes for apps
        $DEFAULT request_templates/App-nodes.vtl --type ManagedApp --field-name nodes
        $DEFAULT request_templates/App-nodes.vtl --type ExternalApp --field-name nodes

        # Edge resolvers for nodes
        $DEFAULT request_templates/Node-send_edges.vtl --type ExternalNode --field-name send_edges
        $DEFAULT request_templates/Node-send_edges.vtl --type Hl7MLLPInboundNode --field-name send_edges
        $DEFAULT request_templates/Node-receive_edges.vtl --type Hl7MLLPOutboundNode --field-name receive_edges
        $DEFAULT request_templates/Node-receive_edges.vtl --type ExternalNode --field-name receive_edges
        $LAMBDA_RESOLVER kms_key_datasource --type-name Edge --field-name kms_key

        # Subscriptions
        $SUBSCRIPTION --type Subscription --field-name onStreamNotifications --response-mapping-template response_templates/onStreamNotifications.vtl --request-mapping-template request_templates/onStreamNotifications.vtl
