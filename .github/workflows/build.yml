name: Build Resolvers

on:
  push:
    branches:
    - master
    - develop
    - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set env vars
      run: |
        echo ::set-env name=AWS_DEFAULT_REGION::us-east-1
        if [ "${GITHUB_REF}" = "refs/heads/develop" ]; then
          echo ::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          echo ::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          echo ::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_DEV }}
        elif [ "${GITHUB_REF}" = "refs/heads/master" ]; then
          echo ::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          echo ::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          echo ::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_DEV }}
        elif [[ "${GITHUB_REF}" =~ ^refs/heads/release/([0-9]+\.)+[0-9]$ ]]; then
          echo ::set-env name=AWS_ACCESS_KEY_ID::${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          echo ::set-env name=AWS_SECRET_ACCESS_KEY::${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          echo ::set-env name=API_ID::${{ secrets.APPSYNC_API_ID_STAGE }}
        else:
          echo "Not a buildable branch. Exiting"
          exit 0
        fi
    - name: Upload schema
      run: python -m appsync_schema_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --schema schema.graphql
    - name: Upload resolvers
      run: |
        echo "API ID: ${API_ID}, KEY_ID: ${AWS_ACCESS_KEY_ID}, AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}"
        exit 0
        DYNAMO_SINGLE_RESPONSE="python -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name dynamodb --response-mapping-template response_templates/single-result.vtl --request-mapping-template "
        DYNAMO_MULTI_RESPONSE="python -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name dynamodb --response-mapping-template response_templates/multi-result.vtl --request-mapping-template "
        LAMBDA_RESOLVER="python -m appsync_resolver_uploader --aws-access-key-id ${AWS_ACCESS_KEY_ID} --aws-secret-access-key ${AWS_SECRET_ACCESS_KEY} --api-id ${API_ID} --datasource-name "

        # Queries
        $LAMBDA_RESOLVER kms-key-datasource --type-name Query --field-name ListKeys

        # Mutations
        DYNAMO_SINGLE_RESPONSE requests/PutHl7InboundNode.vtl --type Mutation --field-name PutHl7InboundNode
        DYNAMO_SINGLE_RESPONSE requests/PutHl7OutboundNode.vtl --type Mutation --field-name PutHl7OutboundNode
        DYNAMO_SINGLE_RESPONSE requests/PutEdgeNode.vtl --type Mutation --field-name PutEdgeNode
        DYNAMO_SINGLE_RESPONSE requests/PutCustomNode.vtl --type Mutation --field-name PutEdgeNode
        DYNAMO_SINGLE_RESPONSE requests/PutEdge.vtl --type Mutation --field-name PutEdge

        # Subtypes
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type Hl7InboundNode --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type Hl7OutboundNode --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type EdgeNode --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type CustomNode --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type Edge --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type Hl7App --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type EdgeApp --field-name tenant
        DYNAMO_SINGLE_RESPONSE requests/tenant-field.vtl --type KMSKey --field-name tenant
