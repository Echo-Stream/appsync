name: Upload Appsync API and generate documentation

on:
  push:
    branches:
      - 'main'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  upload-schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env vars
        run: |
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.ARTIFACTS_PIPELINES_ACCESS_KEY  }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.ARTIFACTS_PIPELINES_SECRET_KEY }}" >> $GITHUB_ENV
          echo "ARTIFACTS_BUCKET=${{ secrets.ARTIFACTS_S3 }}" >> $GITHUB_ENV

          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "S3_PREFIX=${{ secrets.ECHOSTREAM_VERSION }}-dev" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" =~ ^refs\/heads\/v([0-9])+\.([0-9])+ ]]; then
            VERSION=`echo "${GITHUB_REF##*/v}" | cut -d'.' -f1-2`
            echo "S3_PREFIX=$VERSION" >> $GITHUB_ENV
          else
            echo "REF: ${GITHUB_REF}"
            echo "Not a buildable branch. Exiting"
            exit 1
          fi
          echo "REF: ${GITHUB_REF}"
      - name: Upload schema
        run: aws s3 cp schema.graphql s3://$ARTIFACTS_BUCKET/$S3_PREFIX/appsync/ --content-type text/plain --sse
        if: ${{ success() }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install graphdoc and generate docs
        run: |
          npm install -g @2fd/graphdoc
          awk 1 scalars.graphql schema.graphql > echo.graphql
          graphdoc
      - name: Upload docs
        run: |
          aws s3 sync doc/ s3://${{ secrets.ARTIFACTS_S3 }}/$S3_PREFIX/ui/docs --sse
        if: ${{ success() }}